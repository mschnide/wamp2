<html>

    <head>
        <script src="https://autobahn.s3.amazonaws.com/autobahnjs/latest/autobahn.min.jgz"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.17/angular.min.js"></script>
        <script>
            var port = '8880';
            var myApp = angular.module("MyApp", []);

            myApp.config(function($interpolateProvider) {
                $interpolateProvider.startSymbol('[[');
                $interpolateProvider.endSymbol(']]');
            });

            myApp.controller("MyController", function($scope) {

                $scope.messages = [];
                $scope.rpc = false;
                $scope.subscribe = false;

                //The first socket connection
                var connection1 = new autobahn.Connection({
                    url: 'ws://localhost:' + port + '/pubsub',
                    realm: 'realm1'
                });

                connection1.onopen = function(session) {
                    console.log("1: Successfully made the first socket connection.");
                    $scope.messages.push("Successfully made the first socket connection.");
                    $scope.$apply();

                    //subscribe to a topic
                    function onevent(args) {
                        console.log("1: Response to event com.mschnide.wamp.echo: " + args[0]);
                        $scope.messages.push("Response to event com.mschnide.wamp.echo: " + args[0]);
                        $scope.$apply();
                    }

                };

                connection1.open();

                connection1.onclose = function(reason, details) {
                    console.log("Connection 1 " + reason);
                    $scope.messages.push("Connection 1 " + reason);
                    $scope.$apply();
                };

                //The second socket connection
                var connection2 = new autobahn.Connection({
                    url: 'ws://localhost:' + port + '/pubsub',
                    realm: 'realm1'
                });

                connection2.open();

                connection2.onopen = function(session) {
                    console.log("2: Successfully made the second socket connection.");
                    $scope.messages.push("Successfully made the second socket connection.");
                    $scope.$apply();
                };

                connection2.onclose = function(reason, details) {
                    console.log("Connection 2 " + reason);
                    $scope.messages.push("Connection 2 " + reason);
                    $scope.$apply();
                };

                $scope.makeRpcCall = function() {
                    console.log("2: Starting to make an RPC Call");
                    $scope.messages.push("Starting to make an RPC Call");

                    //call a remote procedure
                    connection2.session.call('com.mschnide.wamp.add2', [2, 3]).then(
                        function(res) {
                            console.log("Result:", res);
                            $scope.messages.push("RPC Call Result: " + res);
                            $scope.$apply();
                        },
                        function(error) {
                            console.log("2: RPC Call Failure: " + error);
                            $scope.messages.push("RPC Call Failure: " + error);
                            $scope.$apply();
                        }
                    );
                };

                $scope.publishEvent = function() {
                    console.log("2: Starting to publish event");
                    $scope.messages.push("Starting to publish event");

                    //publish an event
                    connection2.session.publish('com.mschnide.wamp.echo', ['Hello, world!'], {}, {acknowledge: true}).then(
                        function(res) {
                            console.log("Result:", res.id);
                            $scope.messages.push("Publish Event: " + res.id);
                            $scope.$apply();
                        },
                        function(error) {
                            console.log("2: Publish Event Failure: " + error);
                            $scope.messages.push("Publish Event Failure: " + error);
                            $scope.$apply();
                        }
                    );

                };

                $scope.clear = function() {
                    $scope.messages = [];
                };

            });


        </script>

    </head>

    <body ng-app="MyApp">

        <div ng-controller="MyController">
            <button ng-click="makeRpcCall()" >Make an RPC Call</button>
            <button ng-disabled="!subscribe" ng-click="publishEvent()" >Publish Event</button>

            <button ng-click="clear()" ng-if="messages.length > 0">Clear List</button>

            <ul>
                <li ng-repeat="message in messages track by $index">[[message]]</li>
            </ul>

        </div>


    </body>

</html>
